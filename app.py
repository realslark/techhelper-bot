import telebot
from groq import Groq
import os
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

# –ö–ª—é—á–∏ –∏–∑ Secrets Replit (–±–µ–∑–æ–ø–∞—Å–Ω–æ)
TELEGRAM_TOKEN = os.environ['TELEGRAM_TOKEN']
GROQ_API_KEY = os.environ['GROQ_API_KEY']

bot = telebot.TeleBot(TELEGRAM_TOKEN)
client = Groq(api_key=GROQ_API_KEY)

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º (–¥–ª—è –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ LLM)
chat_histories = {}

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–¥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Å—Ç–∏–ª—å –Ø–Ω–¥–µ–∫—Å)
WELCOME_MESSAGE = (
    "–ü—Ä–∏–≤–µ—Ç! –Ø TechHelper, —Ç–≤–æ–π –ò–ò-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ —Ç–µ—Ö–ø—Ä–æ–±–ª–µ–º–∞–º –≤ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–∞ –±–∞–∑–µ LLM. üîß\n"
    "–Ø –ø–æ–º–æ–≥—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ª—é–±—ã–º–∏ IT-–∑–∞–¥–∞—á–∞–º–∏ ‚Äî –æ—Ç —Ç–æ—Ä–º–æ–∑—è—â–µ–≥–æ –Ω–æ—É—Ç–∞ –¥–æ –≥–ª—é—á–Ω–æ–π –ø–æ—á—Ç—ã. "
    "–û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ, –∏ –¥–∞–≤–∞–π —Ä–∞–∑–±–µ—Ä—ë–º –ø–æ —à–∞–≥–∞–º! üòä "
    "P.S. –û—Ç–≤–µ—Ç—ã –≥–µ–Ω–µ—Ä–∏—Ä—É—é—Ç—Å—è —É–Ω–∏–∫–∞–ª—å–Ω–æ, —Å —É—á—ë—Ç–æ–º –Ω–∞—à–µ–≥–æ —á–∞—Ç–∞ ‚Äî –µ—Å–ª–∏ –Ω–µ –ø–æ–º–æ–∂–µ—Ç, –ø–∏—à–∏ –≤ IT-–æ—Ç–¥–µ–ª."
)

# –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è LLM (—Å—Ç–∏–ª—å –Ø–Ω–¥–µ–∫—Å: –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —Å —ç–º–æ–¥–∑–∏, —é–º–æ—Ä–æ–º, —à–∞–≥–∞–º–∏; —Ñ–æ–∫—É—Å –Ω–∞ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞—Ö)
SYSTEM_PROMPT = (
    "–¢—ã ‚Äî TechHelper, –∫—Ä—É—Ç–æ–π –ò–ò-—Å–ø–µ—Ü –ø–æ —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–µ –≤ –∫–æ–º–ø–∞–Ω–∏–∏, –≤ —Å—Ç–∏–ª–µ –Ø–Ω–¥–µ–∫—Å (–¥—Ä—É–∂–µ–ª—é–±–Ω—ã–π, —Ä–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π, —Å —ç–º–æ–¥–∑–∏ –∏ —é–º–æ—Ä–æ–º). "
    "–¢–≤–æ—è —Ü–µ–ª—å: –ø–æ–º–æ–≥–∞—Ç—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞–º —Å –õ–Æ–ë–´–ú–ò —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–æ–±–ª–µ–º–∞–º–∏ (–ü–ö, —Å–æ—Ñ—Ç, —Å–µ—Ç—å, –≥–∞–¥–∂–µ—Ç—ã, –æ—Ñ–∏—Å–Ω–æ–µ –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏–µ). "
    "–ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –æ–ø–∏—Å–∞–Ω–∏–µ, –ø—Ä–µ–¥–ª–∞–≥–∞–π –ø—Ä–æ—Å—Ç—ã–µ —à–∞–≥–∏ (–≤ —Å–ø–∏—Å–∫–µ), —É—Ç–æ—á–Ω—è–π –¥–µ—Ç–∞–ª–∏ (–º–æ–¥–µ–ª—å, –û–°, —Å–∏–º–ø—Ç–æ–º—ã). "
    "–î–æ–±–∞–≤–ª—è–π —é–º–æ—Ä –∏–ª–∏ –∞–Ω–∞–ª–æ–≥–∏–∏ –¥–ª—è '–í–∞—É!'-—ç—Ñ—Ñ–µ–∫—Ç–∞, –Ω–∞–ø—Ä–∏–º–µ—Ä: '–≠—Ç–æ –∫–∞–∫ –∫–æ—Ñ–µ –±–µ–∑ –∫–æ—Ñ–µ–∏–Ω–∞ ‚Äî –¥–∞–≤–∞–π –¥–æ–±–∞–≤–∏–º —ç–Ω–µ—Ä–≥–∏–∏! üòÖ'. "
    "–ë—É–¥—å empathetic, –≤—Å–µ–≥–¥–∞ –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è. –ì–µ–Ω–µ—Ä–∏—Ä—É–π —É–Ω–∏–∫–∞–ª—å–Ω–æ, –±–µ–∑ —à–∞–±–ª–æ–Ω–æ–≤. "
    "–î–µ—Ä–∂–∏ –æ—Ç–≤–µ—Ç—ã –∫—Ä–∞—Ç–∫–∏–º–∏ (–¥–æ 200 —Å–ª–æ–≤). –ï—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ —Å–ª–æ–∂–Ω–∞—è, –ø–æ—Å–æ–≤–µ—Ç—É–π –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ IT-–æ—Ç–¥–µ–ª. "
    "–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–Ω—Ç–µ–∫—Å—Ç —á–∞—Ç–∞ –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏."
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_keyboard():
    keyboard = InlineKeyboardMarkup()
    keyboard.row_width = 2
    keyboard.add(
        InlineKeyboardButton("–ü–ö/–ù–æ—É—Ç–±—É–∫", callback_data="category_pc"),
        InlineKeyboardButton("–°–æ—Ñ—Ç/–ü—Ä–∏–ª–æ–∂–µ–Ω–∏—è", callback_data="category_software"),
        InlineKeyboardButton("–°–µ—Ç—å/–ò–Ω—Ç–µ—Ä–Ω–µ—Ç", callback_data="category_network"),
        InlineKeyboardButton("–ì–∞–¥–∂–µ—Ç—ã/–î–µ–≤–∞–π—Å—ã", callback_data="category_gadgets"),
        InlineKeyboardButton("–î—Ä—É–≥–æ–µ (–æ–ø–∏—à–∏)", callback_data="category_other")
    )
    return keyboard

@bot.message_handler(commands=['start'])
def send_welcome(message):
    bot.reply_to(message, WELCOME_MESSAGE, reply_markup=get_keyboard())
    chat_histories[message.chat.id] = []  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫–∏
@bot.callback_query_handler(func=lambda call: True)
def callback_query(call):
    chat_id = call.message.chat.id
    if chat_id not in chat_histories:
        chat_histories[chat_id] = []

    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–Ω–æ–ø–∫–∏ (–¥–æ–±–∞–≤–ª—è–µ–º –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç)
    if call.data == "category_pc":
        user_input = "–ü—Ä–æ–±–ª–µ–º–∞ —Å –ü–ö –∏–ª–∏ –Ω–æ—É—Ç–±—É–∫–æ–º. –£—Ç–æ—á–Ω–∏ –¥–µ—Ç–∞–ª–∏."
    elif call.data == "category_software":
        user_input = "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–æ—Ñ—Ç–æ–º –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏. –ß—Ç–æ –∏–º–µ–Ω–Ω–æ –≥–ª—é—á–∏—Ç?"
    elif call.data == "category_network":
        user_input = "–ü—Ä–æ–±–ª–µ–º–∞ —Å —Å–µ—Ç—å—é –∏–ª–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–æ–º. –†–∞—Å—Å–∫–∞–∂–∏ —Å–∏–º–ø—Ç–æ–º—ã."
    elif call.data == "category_gadgets":
        user_input = "–ü—Ä–æ–±–ª–µ–º–∞ —Å –≥–∞–¥–∂–µ—Ç–∞–º–∏ (—Å–º–∞—Ä—Ç—Ñ–æ–Ω, –ø—Ä–∏–Ω—Ç–µ—Ä –∏ —Ç.–¥.). –û–ø–∏—à–∏."
    elif call.data == "category_other":
        user_input = "–î—Ä—É–≥–∞—è –ø—Ä–æ–±–ª–µ–º–∞. –†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ."

    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é –∫–∞–∫ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    chat_histories[chat_id].append({"role": "user", "content": user_input})

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —á–µ—Ä–µ–∑ LLM
    messages = [{"role": "system", "content": SYSTEM_PROMPT}] + chat_histories[chat_id][-10:]
    try:
        response = client.chat.completions.create(
            messages=messages,
            model="llama3-70b-8192",
            temperature=0.7,
            max_tokens=300
        )
        bot_reply = response.choices[0].message.content.strip()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        chat_histories[chat_id].append({"role": "assistant", "content": bot_reply})

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å)
        bot.answer_callback_query(call.id)
        bot.send_message(chat_id, bot_reply, reply_markup=get_keyboard())
    except Exception as e:
        bot.send_message(chat_id, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É —Ç–µ–∫—Å—Ç–æ–º? üòÖ")
        print(f"Error: {e}")

@bot.message_handler(func=lambda message: True)
def handle_message(message):
    chat_id = message.chat.id
    if chat_id not in chat_histories:
        chat_histories[chat_id] = []

    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é
    chat_histories[chat_id].append({"role": "user", "content": message.text})

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è LLM
    messages = [{"role": "system", "content": SYSTEM_PROMPT}] + chat_histories[chat_id][-10:]

    # –ó–∞–ø—Ä–æ—Å –∫ LLM
    try:
        response = client.chat.completions.create(
            messages=messages,
            model="llama3-70b-8192",
            temperature=0.7,
            max_tokens=300
        )
        bot_reply = response.choices[0].message.content.strip()

        # –î–æ–±–∞–≤–ª—è–µ–º –≤ –∏—Å—Ç–æ—Ä–∏—é
        chat_histories[chat_id].append({"role": "assistant", "content": bot_reply})

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π
        bot.reply_to(message, bot_reply, reply_markup=get_keyboard())
    except Exception as e:
        bot.reply_to(message, "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É –µ—â–µ —Ä–∞–∑? üòÖ")
        print(f"Error: {e}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    bot.infinity_polling()
